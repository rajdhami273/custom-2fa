

const fs = require('fs');

const arr = [process.argv.shift(), process.argv, {
    cwd: process.cwd(),
    detached: true,
    stdio: "inherit"
}]
const startChildServer = () => {
    process.env.pieServer = process.pid;
    cProcess = require("child_process").spawn(...arr)
}

let cProcess = null;
let server = null;

global.pie = {};

const run = () => {
    let i = null;
    const killThis = () => {
        if(i) {
            clearInterval(i);
        }
        process.exit();
    }
    if (process.env.pieServer) {
        const PORT = 3712;
 
        i = setInterval(()=>{
            require('find-process')('pid', process.env.pieServer)
            .then(function (list) {
                if(list.length <= 0) {
                    killThis();
                }
            }, function (err) {
                killThis();
            })
        }, 10000);
        
        
        const startServer = async () => {
            
            
            try {
                const app = await require('./mapie')(null, pie, {rootDir: process.env.rootDir})
                const port = pie.config.PORT || PORT
                return app.listen(port, () => {
                    console.log('Mapie Server running at  ' + port);
                });
            } catch(err) {
                console.log(err);
                process.kill(process.env.pieServer, 'SIGINT');
            }
            
        }

        server = startServer();
    } else {
        
        const pieConfig = JSON.parse(fs.readFileSync('pie.json'));
        var watch = require('node-watch');

        const ignoreFiles = [...['pie.json', 'package.json', 'node_modules/'], ...pieConfig.ignoreFiles || []];

        watch('./', { recursive: true }, function (evt, name) {
            const ind = ignoreFiles.findIndex(e => name.match(new RegExp('^' + e)));
            if (ind < 0) {
                console.log("\nServer restarting");
                if (cProcess) {
                    cProcess.kill();
                }
                startChildServer();
            }
        });
        startChildServer();
        process.on('SIGINT', function () {
            console.log("\Mapie Server shutting down");
            if (cProcess) {
                cProcess.kill();
            }
            process.exit();
        });
    }
}


module.exports = run;